{"ast":null,"code":"var _jsxFileName = \"C:\\\\tami4_exercise\\\\react_app\\\\src\\\\login\\\\login.jsx\";\nimport React from 'react'; // import Trans from '../shared/transService';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'; // import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { useForm } from \"react-hook-form\";\n\nfunction Login() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log('submit', data);\n  }; // your form submit function which will invoke after successful validation\n  // state = {\n  //     open: false,\n  //     email: ''\n  // };\n  // openModal = () => {\n  //     // console.log('opennn')\n  //     this.setState({ open: true });\n  // };\n  // closeModal = () => {\n  //     this.setState({ open: false });\n  // };\n  // setEmail = (e) => {\n  //     const { value } = e.target;\n  //     // console.log('setEmailsetEmail', value)\n  //     this.setState({ email: value });\n  // }\n  // login = () => {\n  //     alert(this.state.email);\n  //     this.closeModal();\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }\n  }, \"Example\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"example\",\n    defaultValue: \"test\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 28\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input-required\",\n    label: \"Email address\",\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    error: !!errors.email,\n    inputRef: register({\n      required: true,\n      pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    }),\n    hr: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, errors.email && \"Invalid email address\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 1\n    }\n  }, \"submit\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/tami4_exercise/react_app/src/login/login.jsx"],"names":["React","Button","TextField","useForm","Login","register","handleSubmit","watch","errors","onSubmit","data","console","log","exampleRequired","email","required","pattern"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CL,OAAO,EAAzD;;AAEA,QAAMM,QAAQ,GAAGC,IAAI,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACH,GAFD,CAHa,CAKV;AAEH;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GADJ,eAkBR;AAAM,IAAA,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;AAAwC,IAAA,UAAU,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAEA;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,YAAY,EAAC,MAAnC;AAA0C,IAAA,GAAG,EAAEJ,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAgBCG,MAAM,CAACK,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAhB3B,eAkBA,oBAAC,SAAD;AACU,IAAA,EAAE,EAAC,+BADb;AAEU,IAAA,KAAK,EAAC,eAFhB;AAGU,IAAA,IAAI,EAAC,OAHf;AAIU,IAAA,IAAI,EAAC,OAJf;AAKU,IAAA,YAAY,EAAC,OALvB;AAMU,IAAA,MAAM,EAAC,QANjB;AAOU,IAAA,OAAO,EAAC,UAPlB;AAQU,IAAA,KAAK,EAAE,CAAC,CAACL,MAAM,CAACM,KAR1B;AASU,IAAA,QAAQ,EAAET,QAAQ,CAAC;AACfU,MAAAA,QAAQ,EAAE,IADK;AAEjBC,MAAAA,OAAO,EAAE;AAFQ,KAAD,CAT5B;AAaU,IAAA,EAAE,MAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBA,eAiCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,MAAM,CAACM,KAAP,IAAgB,uBAApB,CAjCR,eAoCA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCA,CAlBQ,CADJ;AA4DH;;AAED,eAAeV,KAAf","sourcesContent":["import React from 'react';\r\n// import Trans from '../shared/transService';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction Login() {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = data => {\r\n        console.log('submit', data);\r\n    }; // your form submit function which will invoke after successful validation\r\n\r\n    // state = {\r\n    //     open: false,\r\n    //     email: ''\r\n    // };\r\n\r\n    // openModal = () => {\r\n    //     // console.log('opennn')\r\n    //     this.setState({ open: true });\r\n    // };\r\n\r\n    // closeModal = () => {\r\n    //     this.setState({ open: false });\r\n    // };\r\n\r\n    // setEmail = (e) => {\r\n    //     const { value } = e.target;\r\n    //     // console.log('setEmailsetEmail', value)\r\n    //     this.setState({ email: value });\r\n    // }\r\n\r\n    // login = () => {\r\n    //     alert(this.state.email);\r\n    //     this.closeModal();\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h1>To subscribe to this website, please enter your email address here. We will send updates\r\n                            occasionally.</h1>\r\n            {/* <form onSubmit={handleSubmit(onSubmit)}>\r\n                {/* <label>Example</label> */}\r\n                {/* <TextField name=\"example\" defaultValue=\"test\" ref={register} /> */}\r\n                {/* <label>ExampleRequired</label> */}\r\n                {/* <TextField\r\n                    label=\"Login\"\r\n                    variant=\"outlined\"\r\n                    name=\"exampleRequired\"\r\n                    ref={register({ required: true, maxLength: 10 })}\r\n                    helperText=\"required\"\r\n                    error={errors.exampleRequired}\r\n                />\r\n                <Button type=\"submit\">Submit</Button>\r\n            </form> */} \r\n\r\n<form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n<label>Example</label>\r\n<input name=\"example\" defaultValue=\"test\" ref={register} />\r\n{/* <label>ExampleRequired</label> */}\r\n{/* <TextField label=\"Login\"\r\n                    variant=\"outlined\"\r\n                    name=\"Login\"\r\n                    ref={register({ required: true, maxLength: 10 })}\r\n                    helperText={errors.exampleRequired && 'This field is required'}\r\n                    > */}\r\n{/* <input\r\n  name=\"exampleRequired\"\r\n  ref={register({ required: true, maxLength: 10 })}\r\n/> */}\r\n{/* </TextField > */}\r\n\r\n{errors.exampleRequired && <p>This field is required</p>}\r\n\r\n<TextField\r\n          id=\"outlined-email-input-required\"\r\n          label=\"Email address\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          error={!!errors.email}\r\n          inputRef={register({\r\n              required: true,\r\n            pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n          })}\r\n          hr\r\n        />\r\n        <p>{errors.email && \"Invalid email address\"}</p>\r\n\r\n\r\n<Button type=\"submit\">submit</Button>\r\n</form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}