{"ast":null,"code":"var _jsxFileName = \"C:\\\\tami4_exercise\\\\react_app\\\\src\\\\login\\\\emailInput.jsx\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nfunction EmailInput(props) {\n  const {\n    register,\n    errors\n  } = props;\n  return /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    variant: \"outlined\",\n    error: !!errors.email,\n    fullWidth: true,\n    margin: true,\n    inputRef: register({\n      required: true,\n      pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    }),\n    helperText: errors.email && 'Invalid email address!',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  });\n}\n\n;\nexport default EmailInput;","map":{"version":3,"sources":["C:/tami4_exercise/react_app/src/login/emailInput.jsx"],"names":["React","TextField","EmailInput","props","register","errors","email","required","pattern"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBF,KAA7B;AACA,sBACI,oBAAC,SAAD;AACA,IAAA,KAAK,EAAC,eADN;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,YAAY,EAAC,OAHb;AAIA,IAAA,OAAO,EAAC,UAJR;AAKA,IAAA,KAAK,EAAE,CAAC,CAACE,MAAM,CAACC,KALhB;AAMA,IAAA,SAAS,MANT;AAOA,IAAA,MAAM,MAPN;AAQA,IAAA,QAAQ,EAAEF,QAAQ,CAAC;AACfG,MAAAA,QAAQ,EAAE,IADK;AAEfC,MAAAA,OAAO,EAAE;AAFM,KAAD,CARlB;AAYA,IAAA,UAAU,EAAEH,MAAM,CAACC,KAAP,IAAgB,wBAZ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBH;;AAAA;AACD,eAAeJ,UAAf","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction EmailInput(props) {\r\n    const { register, errors } = props;\r\n    return (\r\n        <TextField\r\n        label=\"Email address\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        variant=\"outlined\"\r\n        error={!!errors.email}\r\n        fullWidth\r\n        margin\r\n        inputRef={register({\r\n            required: true,\r\n            pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        })}\r\n        helperText={errors.email && 'Invalid email address!'}\r\n    />\r\n    )\r\n};\r\nexport default EmailInput;\r\n"]},"metadata":{},"sourceType":"module"}