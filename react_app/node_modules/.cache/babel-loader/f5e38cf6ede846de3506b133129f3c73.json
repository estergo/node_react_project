{"ast":null,"code":"var _jsxFileName = \"C:\\\\tami4_exercise\\\\react_app\\\\src\\\\login\\\\login.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\n\nfunction Login() {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log('submit', data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"User Name\",\n    name: \"username\",\n    variant: \"outlined\",\n    error: !!errors.username,\n    inputRef: register({\n      required: true\n    }),\n    helperText: errors.username && '*Required!',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    variant: \"outlined\",\n    error: !!errors.email,\n    inputRef: register({\n      required: true,\n      pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    }),\n    helperText: errors.email && 'Invalid email address!',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Password\",\n    name: \"password\",\n    variant: \"outlined\",\n    error: !!errors.password,\n    inputRef: register({\n      required: true,\n      pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/\n    }),\n    helperText: errors.password && 'Password should contain UpperCase, LowerCase and Number!',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"submit\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/tami4_exercise/react_app/src/login/login.jsx"],"names":["React","Button","TextField","useForm","Login","register","handleSubmit","errors","onSubmit","data","console","log","username","required","email","pattern","password"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCJ,OAAO,EAAlD;;AAEA,QAAMK,QAAQ,GAAGC,IAAI,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GADJ,eAGI;AAAM,IAAA,QAAQ,EAAEH,YAAY,CAACE,QAAD,CAA5B;AAAwC,IAAA,UAAU,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,SAAD;AACQ,IAAA,KAAK,EAAC,WADd;AAEQ,IAAA,IAAI,EAAC,UAFb;AAGQ,IAAA,OAAO,EAAC,UAHhB;AAIQ,IAAA,KAAK,EAAE,CAAC,CAACD,MAAM,CAACK,QAJxB;AAKQ,IAAA,QAAQ,EAAEP,QAAQ,CAAC;AAACQ,MAAAA,QAAQ,EAAE;AAAX,KAAD,CAL1B;AAMQ,IAAA,UAAU,EAAEN,MAAM,CAACK,QAAP,IAAmB,YANvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAWI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,eADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,YAAY,EAAC,OAHjB;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,KAAK,EAAE,CAAC,CAACL,MAAM,CAACO,KALpB;AAMI,IAAA,QAAQ,EAAET,QAAQ,CAAC;AACfQ,MAAAA,QAAQ,EAAE,IADK;AAEfE,MAAAA,OAAO,EAAE;AAFM,KAAD,CANtB;AAUI,IAAA,UAAU,EAAER,MAAM,CAACO,KAAP,IAAgB,wBAVhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAwBI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,OAAO,EAAC,UAHZ;AAII,IAAA,KAAK,EAAE,CAAC,CAACP,MAAM,CAACS,QAJpB;AAKI,IAAA,QAAQ,EAAEX,QAAQ,CAAC;AACfQ,MAAAA,QAAQ,EAAE,IADK;AAEfE,MAAAA,OAAO,EAAE;AAFM,KAAD,CALtB;AASI,IAAA,UAAU,EAAER,MAAM,CAACS,QAAP,IAAmB,0DATnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,eAoCI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCJ,CAHJ,CADJ;AA6CH;;AAED,eAAeZ,KAAf","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { useForm } from 'react-hook-form';\r\n\r\nfunction Login() {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = data => {\r\n        console.log('submit', data);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>To subscribe to this website, please enter your email address here. We will send updates\r\n                            occasionally.</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n\r\n            <TextField\r\n                    label=\"User Name\"\r\n                    name=\"username\"\r\n                    variant=\"outlined\"\r\n                    error={!!errors.username}\r\n                    inputRef={register({required: true})}\r\n                    helperText={errors.username && '*Required!'}\r\n                />\r\n\r\n                <TextField\r\n                    label=\"Email address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    variant=\"outlined\"\r\n                    error={!!errors.email}\r\n                    inputRef={register({\r\n                        required: true,\r\n                        pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                    })}\r\n                    helperText={errors.email && 'Invalid email address!'}\r\n                />\r\n\r\n                <TextField\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    variant=\"outlined\"\r\n                    error={!!errors.password}\r\n                    inputRef={register({\r\n                        required: true,\r\n                        pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/\r\n                    })}\r\n                    helperText={errors.password && 'Password should contain UpperCase, LowerCase and Number!'}\r\n                />\r\n\r\n                <Button type=\"submit\">submit</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}